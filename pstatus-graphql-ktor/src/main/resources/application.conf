ktor {
    deployment {
        port = 8080
        host = 0.0.0.0
    }

    application {
        modules = [ gov.cdc.ocio.processingstatusapi.ApplicationKt.module ]
    }

    version = "1.0.0"
    database = ${?DATABASE}
    message_system = ${?MSG_SYSTEM}
    report_schema_loader_system = ${?REPORT_SCHEMA_LOADER_SYSTEM}

    message_processor {
        forward_validated_reports = ${?FORWARD_VALIDATED_REPORTS}
    }

    logback {
        environment = "development" # Change to "STG", "PROD", etc. as needed
    }
}

graphql {
    path = ${?GRAPHQL_PATH}
}

security {
    enabled = ${?SECURITY_ENABLED}
    schema_admin_secret_token = ${?SCHEMA_ADMIN_SECRET_TOKEN}
}

aws {
    sqs {
        sendUrl = ${?AWS_SEND_SQS_URL}
    }
    dynamo {
        table_prefix = ${?DYNAMO_TABLE_PREFIX}
    }
    s3 {
        report_schema_bucket=${?REPORT_SCHEMA_S3_BUCKET}
        report_schema_region=${?REPORT_SCHEMA_S3_REGION}
    }
    access_key_id = ${?AWS_ACCESS_KEY_ID}
    secret_access_key = ${?AWS_SECRET_ACCESS_KEY}
    region = ${?AWS_REGION}
    endpoint = ${?AWS_ENDPOINT_URL}
    role_arn=${?AWS_ROLE_ARN}
    web_identity_token_file=${?AWS_WEB_IDENTITY_TOKEN_FILE}
}

azure {
    cosmos_db {
        client {
            endpoint = ${?COSMOS_DB_CLIENT_ENDPOINT}
            key = ${?COSMOS_DB_CLIENT_KEY}
        }
        database_name = "ProcessingStatus"
        container_name = "Reports"
    }
    blob_storage{
        report_schema_connection_string=${?REPORT_SCHEMA_BLOB_CONNECTION_STR}
        report_schema_container=${?REPORT_SCHEMA_BLOB_CONTAINER}
    }
}

rabbitMQ {
    host = ${?RABBITMQ_HOST}
    port = ${?RABBITMQ_PORT}
    user_name = ${?RABBITMQ_USERNAME}
    password = ${?RABBITMQ_PASSWORD}
    send_queue_name = ${?RABBITMQ_VALIDATED_REPORT_QUEUE_NAME}
    virtual_host = ${?RABBITMQ_VIRTUAL_HOST}
}

couchbase {
    connection_string = ${?COUCHBASE_CONNECTION_STRING}
    username = ${?COUCHBASE_USERNAME}
    password = ${?COUCHBASE_PASSWORD}
}

file_system{
    report_schema_local_path= ${?REPORT_SCHEMA_LOCAL_FILE_SYSTEM_PATH}
}

notifications {
    workflow_url = ${?PSTATUS_WORKFLOW_NOTIFICATIONS_BASE_URL}
    rules_engine_url = ${?PSTATUS_RULES_ENGINE_NOTIFICATIONS_BASE_URL}
}
