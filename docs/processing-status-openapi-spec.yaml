openapi: 3.0.1
info:
  title: DEX Processing Status API
  description: |
    Swagger definition of the Data Exchange (DEX) processing status API.
    ## Overview
    ### What it does:
    -	Standardized tracing capture with advanced query options
    -	Standardized report capture with advanced query options
    -	Emitting configurable notifications, which could be used to facilitate workflow management or success/fail observability for uploads
    ### What it doesnâ€™t do:
    -	Workflow management
    -	Access control layer
    
    ## Functionality
    The processing status API provides three areas of functionality including tracing, reporting, and notifications.
      * **Tracing** - Traces are used to indicate the completion of a phase of processing.  For example, as a file is uploaded it progresses through a pipeline.  As milestones are completed in the pipeline a trace is used to indicate the successful completion of that milestone.
      
      * **Reports** - Reports are used to provide feedback whenever one of the processing pipeline stages has warnings, errors, or fails.  There can be more than one processing report for the processing pipeline.  For example, there may be warnings on the structure validation, which reports to the processing API, but the file is allowed to continue processing.  The next stage, content validation, may then have some critical failures that cause the pipeline to stop, which is provided in a second report.
      
      * **Notifications** - Notifications define the methods and filters used to provide feedback to listeners.  Notification setups need to be established and once created persist until cancelled by the listener.  Notification listeners will provide a request to indicate what type of notification they want such as a webhook HTTP call whenever a relevant event occurs.  Notifications apply to both traces and reports.  Notifications may be fired for a trace or report as they are generated or fired when the pipeline concludes.  If the latter, the entire collection of traces or reports is provided all at once, whether because of a failure or it completed successfully.
  version: 1.0.0
servers:
  - url: 'https://apidev.cdc.gov/1.0.0'
    description: Development server
  - url: 'https://api.cdc.gov/1.0.0'
    description: Production server
  - url: 'https://ocio-ede-dev-supplemental-api-kotlin.azurewebsites.net/api'
tags:
  - name: DEX Tracing
    description: CDC Data Exchange Distributed Tracing
  - name: DEX Reports
    description: CDC Data Exchange Reports
    externalDocs:
      description: Find out more
      url: 'https://github.com/CDCgov/data-exchange-csv'
  - name: DEX Status
    description: CDC Data Exchange Status
  - name: DEX Info
    description: CDC Data Exchange Info
  - name: Health
    description: Health endpoint
security:
  - bearerAuth: []
paths:
  '/trace':
    post:
      tags:
        - DEX Tracing
      summary: Create a processing status trace.
      description: >-
        Creates a new distributed tracing trace.
      parameters:
        - name: stageName
          in: query
          required: true
          schema:
            type: string
          description: Name of the stage providing the trace.
      responses:
        '200':
          description: Report for the given identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTrace'
        '400':
          description: Bad request.  The provided stageName is not allowed.
        '401':
          description: Authorization information is missing or invalid.
  '/trace/addSpan/{traceId}/{spanId}':
    put:
      tags:
        - DEX Tracing
      summary: Create a processing status span for a given trace.
      description: >-
        Creates a new distributed tracing trace.
      parameters:
        - name: traceId
          in: path
          required: true
          schema:
            type: string
          description: Trace ID
        - name: spanId
          in: path
          required: true
          schema:
            type: string
          description: Parent span ID to add this span to.
        - name: stageName
          in: query
          required: true
          schema:
            type: string
          description: Name of the stage providing the trace.
        - name: spanMark
          in: query
          required: true
          schema:
            type: string
            enum: [start, stop]
          description: Name of the stage providing the trace.
      requestBody:
        description: >-
          Optional tags.  If a tag is provided with the same `key` in the stop mark as the start mark, the new tag value will
          replace the start tag value.
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tags'
      responses:
        '200':
          description: Report for the given identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTrace'
        '400':
          description: Bad request.  The identifier provided was not found.
        '401':
          description: Authorization information is missing or invalid.
  '/trace/traceId/{traceId}':
    get:
      tags:
        - DEX Tracing
      summary: Gets a processing status trace from a trace ID.
      description: >-
        Retrieves a distributed tracing trace.
      parameters:
        - name: traceId
          in: path
          required: true
          schema:
            type: string
          description: Trace ID.
      responses:
        '200':
          description: Trace for the given upload dentifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTrace'
        '400':
          description: Bad request.  The identifier provided was not found.
        '401':
          description: Authorization information is missing or invalid.
  '/trace/uploadId/{uploadId}':
    get:
      tags:
        - DEX Tracing
      summary: Gets a processing status trace from an upload ID.
      description: >-
        Retrieves a distributed tracing trace span.
      parameters:
        - name: uploadId
          in: path
          required: true
          schema:
            type: string
          description: Upload ID.
      responses:
        '200':
          description: Trace for the given upload dentifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTrace'
        '400':
          description: Bad request.  The identifier provided was not found.
        '401':
          description: Authorization information is missing or invalid.
  '/trace/reportId/{reportId}':
    get:
      tags:
        - DEX Tracing
      summary: Gets a processing status trace from a report ID.
      description: >-
        Retrieves a distributed tracing trace.
      parameters:
        - name: reportId
          in: path
          required: true
          schema:
            type: string
          description: Report ID.
      responses:
        '200':
          description: Trace for the given upload dentifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTrace'
        '400':
          description: Bad request.  The identifier provided was not found.
        '401':
          description: Authorization information is missing or invalid.
  '/report':
    post:
      tags:
        - DEX Reports
      summary: Create an initial report.
      parameters:
        - name: uploadId
          in: query
          required: true
          schema:
            type: string
            format: uuid
          description: Upload identifier this report is associated with.
      description: >-
        Creates an initial report.  The initial report is blank until ammended by the stages.
      responses:
        '200':
          description: Report successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  report_id:
                    type: string
                    format: uuid
        '400':
          description: Bad request.  The identifier provided was not found.
        '401':
          description: Authorization information is missing or invalid.
  '/report/uploadId/{uploadId}':
    put:
      tags:
        - DEX Reports
      summary: Ammend an existing report using the provided upload identifier to lookup the report.
      parameters:
        - name: uploadId
          in: path
          required: true
          schema:
            type: string
          description: Upload ID.
      responses:
        '200':
          description: Trace for the given upload dentifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmmendReport'
        '400':
          description: Bad request.  The upload identifier provided was not found.
        '401':
          description: Authorization information is missing or invalid.
    get:
      tags:
        - DEX Reports
      summary: Retrieve a report using the provider upload identifier to lookup the report.
      description: >-
        Creates a status report for the given upload identifier.
      parameters:
        - name: uploadId
          in: path
          required: true
          schema:
            type: string
          description: Destination identifier to retrieve all the upload statuses for.
      responses:
        '200':
          description: Report for the given identifier
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/HL7Report'
                  - $ref: '#/components/schemas/CSVReport'
        '400':
          description: Bad request.  The identifier provided was not found.
        '401':
          description: Authorization information is missing or invalid.
  '/report/reportId/{reportId}':
    put:
      tags:
        - DEX Reports
      summary: Ammend an existing report with the given report identifier
      parameters:
        - name: reportId
          in: path
          required: true
          schema:
            type: string
          description: Report ID.
      responses:
        '200':
          description: Trace for the given upload dentifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmmendReport'
        '400':
          description: Bad request.  The report identifier provided was not found.
        '401':
          description: Authorization information is missing or invalid.
    get:
      tags:
        - DEX Reports
      summary: Retrieve a report for the given report ID.
      description: >-
        Creates a status report for the given report identifier.
      parameters:
        - name: reportId
          in: path
          required: true
          schema:
            type: string
          description: Report identifier of the report to retrieve.
      responses:
        '200':
          description: Report for the given identifier
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/HL7Report'
                  - $ref: '#/components/schemas/CSVReport'
        '400':
          description: Bad request.  The identifier provided was not found.
        '401':
          description: Authorization information is missing or invalid.
  '/report/traceId/{traceId}':
    put:
      tags:
        - DEX Reports
      summary: Ammend an existing report using the provided trace identifier to lookup the report.
      parameters:
        - name: traceId
          in: path
          required: true
          schema:
            type: string
          description: Trace ID.
      responses:
        '200':
          description: Trace for the given upload dentifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmmendReport'
        '400':
          description: Bad request.  The trace identifier provided was not found.
        '401':
          description: Authorization information is missing or invalid.
    get:
      tags:
        - DEX Reports
      summary: Retrieve a report using the provider trace identifier to lookup the report.
      description: >-
        Provides a status report for the given trace identifier.
      parameters:
        - name: traceId
          in: path
          required: true
          schema:
            type: string
          description: Destination identifier to retrieve all the upload statuses for.
      responses:
        '200':
          description: Report for the given identifier
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/HL7Report'
                  - $ref: '#/components/schemas/CSVReport'
        '400':
          description: Bad request.  The identifier provided was not found.
        '401':
          description: Authorization information is missing or invalid.
  '/report/ids/{destinationId}':
    get:
      tags:
        - DEX Reports
      summary: Provides list of report identifiers for given criteria
      parameters:
        - name: ext_event
          in: query
          schema:
            type: string
          description: >-
            If specified, also filter by meta_ext_event that was provided with
            the upload.
          example: RoutineImmunization
        - name: destinationId
          in: path
          required: true
          schema:
            type: string
          description: Destination identifier to retrieve all the upload statuses for.
        - name: date_start
          in: query
          schema:
            type: string
          description: >-
            Start date of filter.  Format is YYYYMMDDTHHMMSSZ (UTC format,
            inclusive).  Defaults to 3 months prior to today.
          example: 20231020T14103000Z
        - name: date_end
          in: query
          schema:
            type: string
          description: >-
            End date of filter.  Format is YYYYMMDDTHHMMSSZ (UTC format,
            exclusive).  Defaults to today.
          example: 20231030T14103000Z
      responses:
        '200':
          description: List of report identifiers
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    report_id:
                      type: string
                      format: uuid
                    timestamp:
                      type: string
                      format: date-time
                    destination_id:
                      type: string
                    event_type:
                      type: string
        '400':
          description: Bad request.  The identifier provided was not found.
        '401':
          description: Authorization information is missing or invalid.
  '/info/destinationId':
    get:
      tags:
        - DEX Info
      summary: >-
        Provides a list of all known destination IDs.
      responses:
        '200':
          description: All of the known destination identifiers 
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Authorization information is missing or invalid.
  '/info/{destinationId}/eventTypes':
    get:
      tags:
        - DEX Info
      summary: >-
        Provides a list of all known event types for the given destination identifier.
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: All of the known event types 
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Bad request.  The destination identifier provided was not found.
        '401':
          description: Authorization information is missing or invalid.
  '/info/reportSchemas':
    get:
      tags:
        - DEX Info
      summary: >-
        Provides a list of all known report schema identifiers.
      responses:
        '200':
          description: All of the known report schema identifiers 
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example:
                    csv_report_schema_v1.0
        '400':
          description: Bad request.  The destination identifier provided was not found.
        '401':
          description: Authorization information is missing or invalid.
  '/status/{destinationId}':
    get:
      tags:
        - DEX Status
      summary: Provides all upload statuses for the given destination identifier, further filtered by the optional ext_event and date range parameters.
      description: >-
        Provides report for the given identifier.
      parameters:
        - name: ext_event
          in: query
          schema:
            type: string
          description: >-
            If specified, also filter by meta_ext_event that was provided with
            the upload.
          example: RoutineImmunization
        - name: destinationId
          in: path
          required: true
          schema:
            type: string
          description: Destination identifier to retrieve all the upload statuses for.
        - name: date_start
          in: query
          schema:
            type: string
          description: >-
            Start date of filter.  Format is YYYYMMDDTHHMMSSZ (UTC format,
            inclusive).  Defaults to 3 months prior to today.
          example: 20231020T14103000Z
        - name: date_end
          in: query
          schema:
            type: string
          description: >-
            End date of filter.  Format is YYYYMMDDTHHMMSSZ (UTC format,
            exclusive).  Defaults to today.
          example: 20231030T14103000Z
        - name: page_size
          in: query
          schema:
            type: integer
          description: Number of entries returned for the given page.
          example: 50
        - name: page_number
          in: query
          schema:
            type: integer
          description: Page number to retrieve.
          example: 1
        - name: sort_by
          in: query
          schema:
            type: string
          description: Can sort by date or event
          example: date
        - name: sort_order
          in: query
          schema:
            type: string
          description: Can sort by ascending or descening
          example: descending
      responses:
        '200':
          description: All of the upload statuses for the given destination identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessingStatuses'
        '400':
          description: Bad request.  The destination identifier provided was not found.
        '401':
          description: Authorization information is missing or invalid.
  '/health':
    get:
      tags:
        - Health
      summary: Gets the health status of the service.
      description: >-
        Retrieves the health status of the service.
      responses:
        '200':
          description: Health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    CreateTrace:
      type: object
      properties:
        trace_id:
          type: string
        span_id:
          type: string
    GetTrace:
      type: object
      properties:
        trace_id:
          type: string
        span_id:
          type: string
        upload_id:
          type: string
          format: uuid
        timesteamp:
          type: string
          format: date-time
        duration:
          type: number
          description: length of time in microseconds the stage ran
          example: 765024
        destination_id:
          type: string
        event_type:
          type: string
        metadata:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                oneOf:
                  - type: string
                  - type: integer
    Tags:
      type: array
      items:
        type: object
        properties:
          key:
            type: string
          value:
            type: string
    CreateReport:
      type: object
      properties:
        report_id:
          type: string
          format: uuid
    AmmendReport:
      type: object
      properties:
        parent_report_id:
          type: string
          format: uuid
        ammended_report_id:
          type: string
          format: uuod
    HL7Report:
      type: object
      properties:
        schema_version:
          type: string
          description: The schema version of this report.
          example: '1.0'
        schema_type:
          type: string
          description: The schema type of this report.
          example: 'hl7v2'
        filename:
          type: string
          example: hl7_file.txt
        versioning:
          $ref: '#/components/schemas/ReportVersions'
        validation:
          $ref: '#/components/schemas/Validation'
        summary:
          $ref: '#/components/schemas/Summary'
        issues:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: TODO
                example: "syntax|semantic|code_table"
              severity:
                type: string
                description: TODO
                example: "warning|error"
              description:
                type: string
                description: TODO
                example: "{state the reason for the issue or warning}"
              recommendation:
                type: string
                description: TODO
                example: "{if applicable or null}"
    CSVReport:
      type: object
      properties:
        schema_version:
          type: string
          description: The schema version of this report.
          example: '1.0'
        schema_type:
          type: string
          description: The schema type of this report.
          example: 'csv'
        filename:
          type: string
          example: csv_file.csv
        versioning:
          $ref: '#/components/schemas/ReportVersions'
        validation:
          $ref: '#/components/schemas/Validation'
        summary:
          $ref: '#/components/schemas/Summary'
        issues:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: TODO
                example: "syntax|semantic|code_table"
              severity:
                type: string
                description: TODO
                example: "warning|error"
              description:
                type: string
                description: TODO
                example: "{state the reason for the issue or warning}"
              recommendation:
                type: string
                description: TODO
                example: "{if applicable or null}"
    Validation:
      type: object
      properties:
        version:
          type: string
          description: The schema version of this report.
          example: 1.2
        version_date:
          type: string
          format: date
          description: TODO
    ReportVersions:
      type: array
      items:
        type: object
        properties:
          version:
            type: integer
            example: 1
          stage:
            type: string
            example: "dex-upload"
          timestamp:
            type: string
            format: date-time
    Summary:
      type: object
      properties:
        total_issues:
          type: integer
          description: TODO
          example: 2
        warnings:
          type: integer
          description: TODO
          example: 1
        errors:
          type: integer
          description: TODO
          example: 1
        issue_types:
          $ref: '#/components/schemas/HL7IssueTypes'
    HL7IssueTypes:
      type: object
      properties:
        syntax:
          type: integer
          description: TODO
          example: 44
        semantic:
          type: integer
          description: TODO
          example: 11
        code_table:
          type: integer
          description: TODO
          example: 2
    ProcessingStatus:
      type: object
      properties:
        status:
          type: string
          description: The upload status.
          example: Uploading
        tracing:
          type: array
          items:
            type: object
            properties:
              stage:
                type: string
                example: "dex-upload"
              timestamp:
                type: string
                format: date-time
              tags:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    value:
                      type: string
        percent_complete:
          type: number
          format: double
          description: Percentage the upload is complete.
          example: 0.65
        file_name:
          type: string
          description: Filename of the upload.
          example: largefile.csv
        file_size_bytes:
          type: integer
          description: File size in bytes.
          example: 190840042
        bytes_uploaded:
          type: integer
          description: Bytes uploaded so far.
          example: 124046027
        tus_upload_id:
          type: string
          description: Unique identifier of the upload assigned by tus.
          example: 8923c9ff-6afa-42b2-a67b-89cb37e047e6
        time_uploading_sec:
          type: number
          format: double
          description: Total time the upload was or has been in progress.
          example: 34.4
        timestamp:
          type: string
          description: Last modified timestamp for the upload status
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
    ProcessingStatuses:
      type: object
      properties:
        summary:
          $ref: '#/components/schemas/PageSummary'
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProcessingStatus'
    PageSummary:
      type: object
      properties:
        page_number:
          type: integer
          example: 1
        number_of_pages:
          type: integer
          example: 8
        page_size:
          type: integer
          example: 20
        total_items:
          type: integer
          example: 157
    KeyValuePair:
      type: object
      properties:
        key:
          type: string
        value:
          oneOf:
          - type: string
          - type: number
