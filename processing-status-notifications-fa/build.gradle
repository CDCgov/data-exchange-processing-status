buildscript {
    ext.kotlin_version = "1.8.10"
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id "com.microsoft.azure.azurefunctions" version "1.12.1"
}
apply plugin: "java"
apply plugin: "kotlin"

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

group "gov.cdc.ocio"
version "1.0.0-SNAPSHOT"

dependencies {
    implementation 'com.microsoft.azure.functions:azure-functions-java-library:3.0.0'
    implementation 'io.github.oshai:kotlin-logging-jvm:5.1.0'
    implementation group: 'io.github.microutils', name: 'kotlin-logging-jvm', version: '3.0.5'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.3.11'
    implementation group: 'ch.qos.logback.contrib', name: 'logback-json-classic', version: '0.1.5'
    implementation group: 'ch.qos.logback.contrib', name: 'logback-jackson', version: '0.1.5'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.0'

    implementation 'com.azure:azure-messaging-servicebus:7.15.0'
    implementation 'com.microsoft.azure:azure-servicebus:3.6.7'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    testImplementation("org.mockito.kotlin:mockito-kotlin:4.0.0")
    testImplementation "org.testng:testng:7.4.0"
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation "org.mockito:mockito-inline:3.11.2"
    testImplementation "io.mockk:mockk:1.12.0"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

repositories {
    mavenCentral()
}

test {
    useTestNG()
    testLogging {
        events "passed", "skipped", "failed"
    }
    // Set the test classpath, if required
}

azurefunctions {
    subscription = System.getenv("AZURE_SUBSCRIPTION")
    resourceGroup = System.getenv("RESOURCE_GROUP")
    appName = System.getenv("FUNCTION_NAME")
    allowTelemetry = 'false'
    runtime {
        os = 'linux'
    }
    auth {
        client = System.getenv("AZURE_CLIENT_ID")
        tenant = System.getenv("AZURE_TENANT_ID")
        key = System.getenv("AZURE_SECRET")
        environment = 'AZURE'
    }
    localDebug = "transport=dt_socket,server=y,suspend=n,address=5005"
    deployment {
        type = 'run_from_blob'
    }
}