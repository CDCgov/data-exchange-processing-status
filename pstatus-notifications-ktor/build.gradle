
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.24'
    id 'io.ktor.plugin' version '2.3.11'
    id("com.google.cloud.tools.jib") version "3.3.0" // Add Jib plugin
    id "maven-publish"
    id 'java-library'
    id "org.jetbrains.kotlin.plugin.serialization" version "1.8.20"
}
apply plugin: "java"
apply plugin: "kotlin"

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "17"
    }

}

group "gov.cdc.ocio"
version "0.0.1"

dependencies {
    implementation "io.ktor:ktor-server-core:2.3.2"
    implementation "io.ktor:ktor-server-netty:2.3.2"
    implementation "io.ktor:ktor-server-content-negotiation:2.3.2"
    implementation "io.ktor:ktor-serialization-kotlinx-json:2.3.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.7.2"
    implementation "io.github.microutils:kotlin-logging-jvm:3.0.5"
    implementation 'com.azure:azure-messaging-servicebus:7.17.1'
    implementation 'com.microsoft.azure:azure-servicebus:3.6.7'
    implementation "com.google.code.gson:gson:2.10.1"
    implementation 'io.github.microutils:kotlin-logging-jvm:3.0.5'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'ch.qos.logback:logback-classic:1.4.12'
    implementation 'ch.qos.logback.contrib:logback-json-classic:0.1.5'
    implementation group: 'ch.qos.logback.contrib', name: 'logback-jackson', version: '0.1.5'
    implementation "io.insert-koin:koin-core:3.5.6"
    implementation "io.insert-koin:koin-ktor:3.5.6"
    implementation "com.sun.mail:javax.mail:1.6.2"
    implementation 'com.expediagroup:graphql-kotlin-ktor-server:7.1.1'
    implementation 'com.graphql-java:graphql-java-extended-scalars:22.0'
    implementation 'joda-time:joda-time:2.12.7'
    implementation 'org.apache.commons:commons-lang3:3.3.1'
    implementation "com.expediagroup:graphql-kotlin-server:6.0.0"
    implementation "com.expediagroup:graphql-kotlin-schema-generator:6.0.0"
    implementation "io.ktor:ktor-server-netty:2.1.0"
    implementation "io.ktor:ktor-client-content-negotiation:2.1.0"

    implementation("org.jeasy:easy-rules-core:4.1.0")
    implementation("org.jeasy:easy-rules-mvel:4.1.0")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.12.3")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.3")
    implementation("io.ktor:ktor-server-core:2.0.0")
    implementation("io.ktor:ktor-server-netty:2.0.0")
    implementation("io.ktor:ktor-server-content-negotiation:2.0.0")
    implementation("io.ktor:ktor-serialization-jackson:2.0.0")


    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    testImplementation 'org.testng:testng:7.7.0'
    testImplementation "org.mockito:mockito-inline:3.11.2"
    testImplementation "io.mockk:mockk:1.13.9"
    testImplementation "io.ktor:ktor-server-tests-jvm"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

}

ktor {
    docker {
        localImageName.set("pstatus-notifications-ktor")
    }
}

jib {
    from {
        auth {
            username = System.getenv("DOCKERHUB_USERNAME") ?: ""
            password = System.getenv("DOCKERHUB_TOKEN") ?: ""
        }
    }
    to {
        image = 'imagehub.cdc.gov:6989/dex/pstatus/notifications-service'
        auth {
            username = System.getenv("IMAGEHUB_USERNAME") ?: ""
            password = System.getenv("IMAGEHUB_PASSWORD") ?: ""
        }
    }
}

test {
    useTestNG()
    testLogging {
        events "passed", "skipped", "failed"
    }
    //Change this to "true" if we want to execute unit tests
    systemProperty("isTestEnvironment", "false")

    // Set the test classpath, if required
}


repositories{
     mavenCentral()
}

